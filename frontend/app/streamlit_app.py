# streamlit_app.py

from urllib.parse import urlencode, urlparse
import requests
import streamlit as st

st.set_page_config(
    page_title="Log in",
    page_icon="üóùÔ∏è",
)


def get_query_params():
    return st.experimental_get_query_params()


# –ü–æ–ª—É—á–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ URL
query_params = get_query_params()

if "logged_in" not in st.session_state:
    st.session_state.logged_in = False

if "token" not in st.session_state:
    st.session_state.token = None

API_URL = "http://backend:8000"  # Replace with your backend API URL

# Steam API details
STEAM_API_KEY = "D9BA287D5D3668490B52A82727BE5DB6"  # Replace with your Steam API key
STEAM_OPENID_URL = "https://steamcommunity.com/openid/login"

claimed_id = query_params.get("openid.claimed_id", [None])[
    0
]  # –ï—Å–ª–∏ –æ—Ç–∫—Ä—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤ –ø–µ—Ä–≤—ã–π —Ä–∞–∑, —Ç–æ —Ç–æ–∫–µ–Ω–∞ –Ω–µ—Ç, –µ—Å–ª–∏ —Ä–µ–¥–∏—Ä–µ–∫—Ç —Å–æ Steam, —Ç–æ —Ç–æ–∫–µ–Ω –µ—Å—Ç—å

# Steam OpenID –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
STEAM_OPENID_URL = "https://steamcommunity.com/openid/login"
PUBLIC_ADDR = "https://03af-2600-1700-1690-19a0-41a1-ecfc-4b70-df3b.ngrok-free.app"
PUBLIC_OAUTH = f"{PUBLIC_ADDR}"


def clear_query_params():
    # clear query params in streamlit
    st.experimental_set_query_params()


if claimed_id and not st.session_state.logged_in:
    if query_params:

        # –ü–µ—Ä–µ–¥–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –Ω–∞ –±—ç–∫—ç–Ω–¥ –¥–ª—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏
        validate_url = f"{API_URL}/oauth_validate"  # –°—Å—ã–ª–∫–∞ –Ω–∞ —Ç–≤–æ–π FastAPI –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        response = requests.post(validate_url, json=query_params)

        if response.status_code == 200:
            st.session_state.logged_in = True
            clear_query_params()
            # –ü–æ–ª—É—á–∞–µ–º JWT —Ç–æ–∫–µ–Ω –æ—Ç –±—ç–∫–µ–Ω–¥–∞ –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Å–µ—Å—Å–∏–∏
            token = response.json().get("access_token")
            st.session_state["token"] = token
            st.write("–í—ã —É—Å–ø–µ—à–Ω–æ –≤–æ—à–ª–∏ —á–µ—Ä–µ–∑ Steam!")
        else:
            st.session_state.logged_in = False
            st.error("–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ Steam")

    # –ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ç–æ–∫–µ–Ω –≤ —Å–µ—Å—Å–∏–∏ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –µ–≥–æ –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
else:
    params = {
        "openid.ns": "http://specs.openid.net/auth/2.0",
        "openid.mode": "checkid_setup",
        "openid.return_to": PUBLIC_OAUTH,
        "openid.realm": PUBLIC_ADDR,
        "openid.identity": "http://specs.openid.net/auth/2.0/identifier_select",
        "openid.claimed_id": "http://specs.openid.net/auth/2.0/identifier_select",
    }
    query_string = urlencode(params)
    redirect_url = f"{STEAM_OPENID_URL}?{query_string}"
    st.markdown(f"[–í–æ–π—Ç–∏ —á–µ—Ä–µ–∑ Steam]({redirect_url})", unsafe_allow_html=True)

if st.session_state.logged_in:
    st.write("–í—ã –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã —á–µ—Ä–µ–∑ Steam!")
    # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∫–Ω–æ–ø–∫—É "–ü–æ–ª—É—á–∏—Ç—å –±–∞–Ω–¥–ª"
    if st.button("–ü–æ–ª—É—á–∏—Ç—å –±–∞–Ω–¥–ª"):
        # –í—ã–∑—ã–≤–∞–µ–º —ç–Ω–¥–ø–æ–∏–Ω—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –±–∞–Ω–¥–ª–∞
        headers = {"Authorization": f"Bearer {st.session_state['token']}"}
        st.write("–ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –±–∞–Ω–¥–ª...")
        recommend_url = f"{API_URL}/recommend_bundle"
        response = requests.post(recommend_url, headers=headers)
        st.write("–û—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:")

        if response.status_code == 200:
            bundle = response.json()
            st.subheader(f"–¶–µ–Ω–∞ –±–∞–Ω–¥–ª–∞: ${bundle['bundle_price']:.2f}")
            st.write("–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º—ã–µ –∏–≥—Ä—ã:")
            for game in bundle["games"]:
                st.image(game["icon"], width=100)
                st.write(f"**{game['name']}**")
        else:
            st.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –±–∞–Ω–¥–ª–∞")
else:
    st.write("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–æ–π–¥–∏—Ç–µ —á–µ—Ä–µ–∑ Steam, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏.")
